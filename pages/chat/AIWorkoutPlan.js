import React, { useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, ScrollView, ActivityIndicator, Image, Modal, Platform } from 'react-native';
import ArrowHeaderNew from '../../components/ArrowHeaderNew';
import InfoIcon from '../../components/InfoIcon';

const dummyWorkoutPlan = {
  title: "Full Body Strength & Cardio Plan",
  duration: "8 weeks",
  weeklySchedule: [
    {
      day: "Monday",
      exercises: [
        { name: "Push-ups", sets: 3, reps: 12, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Push-ups" },
        { name: "Squats", sets: 4, reps: 15, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Squats" },
        { name: "Plank", duration: "60 seconds", image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Plank" },
        { name: "Lunges", sets: 3, reps: 10, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Lunges" },
        { name: "Mountain Climbers", sets: 3, reps: 20, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Mountain+Climbers" },
        { name: "Mountain Climbers", sets: 3, reps: 20, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Mountain+Climbers" },
        { name: "Mountain Climbers", sets: 3, reps: 20, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Mountain+Climbers" }


      ]
    },
    {
      day: "Wednesday",
      exercises: [
        { name: "Lunges", sets: 3, reps: 10, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Lunges" },
        { name: "Mountain Climbers", sets: 3, reps: 20, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Mountain+Climbers" },
        { name: "Burpees", sets: 3, reps: 10, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Burpees" },
        { name: "Jump Rope", duration: "5 minutes", image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Jump+Rope" }
      ]
    },
    {
      day: "Friday",
      exercises: [
        { name: "Jump Rope", duration: "5 minutes", image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Jump+Rope" },
        { name: "Russian Twists", sets: 3, reps: 15, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Russian+Twists" },
        { name: "Superman Hold", duration: "45 seconds", image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Superman+Hold" },
        { name: "Push-ups", sets: 3, reps: 12, image: "https://placehold.co/200x200/FF6A00/FFFFFF?text=Push-ups" }
      ]
    }
  ]
};

export default function AIWorkoutPlanScreen({ navigation }) {
  const [workoutPlan, setWorkoutPlan] = useState(null);
  const [loading, setLoading] = useState(false);
  const [selectedDay, setSelectedDay] = useState(null);
  const [modalVisible, setModalVisible] = useState(false);

  const generateNewPlan = () => {
    setLoading(true);
    setTimeout(() => {
      setWorkoutPlan(dummyWorkoutPlan);
      setLoading(false);
    }, 1500);
  };

  const savePlan = () => {
    navigation.goBack();
  };

  const openDayModal = (day) => {
    setSelectedDay(day);
    setModalVisible(true);
  };

  const renderExercise = (exercise) => (
    <View style={styles.exerciseContainer}>
      <Image 
        source={{ uri: exercise.image }} 
        style={styles.exerciseImage}
        resizeMode="cover"
      />
      <View style={styles.exerciseInfo}>
        <Text style={styles.exerciseName}>{exercise.name}</Text>
        {exercise.sets && exercise.reps && (
          <View style={styles.exerciseDetailRow}>
            <Text style={styles.exerciseDetail}>
              {exercise.sets} sets × {exercise.reps} reps
            </Text>
            <InfoIcon type="strengthTraining" size={14} />
          </View>
        )}
        {exercise.duration && (
          <Text style={styles.exerciseDetail}>Duration: {exercise.duration}</Text>
        )}
      </View>
    </View>
  );

  return (
    <View style={styles.container}>
      <ArrowHeaderNew navigation={navigation} title="AI Workout Plan" />
      
      {!workoutPlan && !loading && (
        <View style={styles.emptyState}>
          <Text style={styles.emptyStateText}>
            Get a personalized workout plan generated by AI
          </Text>
          <TouchableOpacity 
            style={styles.generateButton}
            onPress={generateNewPlan}
          >
            <Text style={styles.generateButtonText}>Generate Plan</Text>
          </TouchableOpacity>
        </View>
      )}

      {loading && (
        <View style={styles.loadingContainer}>
          <ActivityIndicator size="large" color="#FF6A00" />
          <Text style={styles.loadingText}>Generating your plan...</Text>
        </View>
      )}

      {workoutPlan && !loading && (
        <ScrollView style={styles.planContainer}>
          <View style={styles.actionButtonsContainer}>
            <TouchableOpacity 
              style={[styles.actionButton, styles.regenerateButton]}
              onPress={generateNewPlan}
            >
              <Text style={styles.actionButtonText}>Generate New Plan</Text>
            </TouchableOpacity>
            
            <TouchableOpacity 
              style={[styles.actionButton, styles.saveButton]}
              onPress={savePlan}
            >
              <Text style={styles.actionButtonText}>Save Plan</Text>
            </TouchableOpacity>
          </View>

          <View style={styles.aiDescriptionContainer}>
            <Text style={styles.aiDescriptionText}>
              The SyntraFit AI model has analyzed your fitness goals and generated a personalized workout plan tailored to your needs. This plan is designed to help you achieve optimal results while maintaining proper form and safety.
            </Text>
          </View>

          <Text style={styles.planTitle}>{workoutPlan.title}</Text>
          <Text style={styles.planDuration}>Duration: {workoutPlan.duration}</Text>
          
          {workoutPlan.weeklySchedule.map((day, index) => (
            <View key={index} style={styles.dayContainer}>
              <View style={styles.dayHeader}>
                <Text style={styles.dayTitle}>{day.day}</Text>
                {day.exercises.length > 3 && (
                  <TouchableOpacity 
                    style={styles.viewAllButton}
                    onPress={() => openDayModal(day)}
                  >
                    <Text style={styles.viewAllButtonText}>View All</Text>
                  </TouchableOpacity>
                )}
              </View>
              {day.exercises.slice(0, 3).map((exercise, exIndex) => (
                renderExercise(exercise)
              ))}
            </View>
          ))}
        </ScrollView>
      )}

      <Modal
        animationType="slide"
        transparent={true}
        visible={modalVisible}
        onRequestClose={() => setModalVisible(false)}
      >
        <View style={styles.modalContainer}>
          <View style={styles.modalContent}>
            <View style={styles.modalHeader}>
              <Text style={styles.modalTitle}>{selectedDay?.day}</Text>
              <TouchableOpacity 
                style={styles.closeButton}
                onPress={() => setModalVisible(false)}
              >
                <Text style={styles.closeButtonText}>×</Text>
              </TouchableOpacity>
            </View>
            <ScrollView>
              {selectedDay?.exercises.map((exercise, index) => (
                renderExercise(exercise)
              ))}
            </ScrollView>
          </View>
        </View>
      </Modal>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#1C1C1E',
    paddingTop: Platform.OS === 'ios' ? 45 : 10,
  },
  emptyState: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  emptyStateText: {
    color: '#FFFFFF',
    fontSize: 18,
    textAlign: 'center',
    marginBottom: 20,
  },
  generateButton: {
    backgroundColor: '#FF6A00',
    paddingVertical: 15,
    paddingHorizontal: 30,
    borderRadius: 10,
  },
  generateButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  loadingText: {
    color: '#FFFFFF',
    marginTop: 10,
    fontSize: 16,
  },
  planContainer: {
    flex: 1,
    padding: 20,
  },
  planTitle: {
    color: '#FFFFFF',
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  planDuration: {
    color: '#FF6A00',
    fontSize: 16,
    marginBottom: 20,
  },
  dayContainer: {
    backgroundColor: '#2C2C2E',
    borderRadius: 10,
    padding: 15,
    marginBottom: 15,
  },
  dayHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 10,
  },
  dayTitle: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: 'bold',
  },
  viewAllButton: {
    backgroundColor: '#3A3A3C',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 15,
  },
  viewAllButtonText: {
    color: '#FF6A00',
    fontSize: 14,
  },
  exerciseContainer: {
    backgroundColor: '#3A3A3C',
    borderRadius: 8,
    padding: 12,
    marginBottom: 8,
    flexDirection: 'row',
    alignItems: 'center',
  },
  exerciseImage: {
    width: 60,
    height: 60,
    borderRadius: 8,
    marginRight: 12,
  },
  exerciseInfo: {
    flex: 1,
  },
  exerciseName: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
  exerciseDetailRow: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  exerciseDetail: {
    color: '#FF6A00',
    fontSize: 14,
    marginTop: 4,
  },
  actionButtonsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 20,
    paddingHorizontal: 5,
  },
  actionButton: {
    flex: 1,
    paddingVertical: 12,
    borderRadius: 10,
    marginHorizontal: 5,
    elevation: 3,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
  },
  regenerateButton: {
    backgroundColor: '#2C2C2E',
  },
  saveButton: {
    backgroundColor: '#FF6A00',
  },
  actionButtonText: {
    color: '#FFFFFF',
    textAlign: 'center',
    fontSize: 16,
    fontWeight: 'bold',
  },
  modalContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
  modalContent: {
    backgroundColor: '#2C2C2E',
    borderRadius: 15,
    padding: 20,
    width: '90%',
    maxHeight: '80%',
  },
  modalHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 15,
  },
  modalTitle: {
    color: '#FFFFFF',
    fontSize: 20,
    fontWeight: 'bold',
  },
  closeButton: {
    padding: 5,
  },
  closeButtonText: {
    color: '#FFFFFF',
    fontSize: 24,
    fontWeight: 'bold',
  },
  aiDescriptionContainer: {
    backgroundColor: '#2C2C2E',
    borderRadius: 10,
    padding: 15,
    marginBottom: 20,
  },
  aiDescriptionText: {
    color: '#FFFFFF',
    fontSize: 14,
    lineHeight: 20,
    textAlign: 'center',
  },
});